// TODO: 나중에 단순 string배열이 아닌 객체배열로 바꿀 예정

export const MockQuestions = [
  '브라우저 저장소', // HTML, CSS, JS - start
  'js 비동기 처리 방식',
  'cors',
  'DOM(Document Object Model)',
  'Virtual DOM',
  '웹 접근성',
  '시멘틱 마크업',
  'SEO',
  '브라우저 랜더링 과정.',
  '호이스팅',
  '이벤트 버블링, 캡처링, 위임',
  'this',
  'javascript 싱글 스레드',
  'var let const 차이',
  '최신 자바스크립트 문법 ( map, filter, find …)',
  'undefined, null, undecalred',
  'CSS Box model',
  'http, https',
  'atomic design pattern',
  'map과 foreach의 차이',
  'Type과 Interface의 차이',
  '객체란',
  '크로스 브라우징',
  'GET POST 차이?',
  '서버가 죽었을 때 화면 처리',
  'axios timeout', // HTML, CSS, JS - end
  '함수형 컴포넌트와 Class형 컴포넌트 방식의 차이점에 대해서 답변해주세요. 둘 중 선호하는 것은 ?', // react-start
  '컴포넌트란 무엇인가요',
  '리액트 랜더링 과정',
  'JSX에 대해 설명해주세요',
  'useEffect와 useLayoutEffect의 차이점에 대해 설명해주세요',
  'Props/ Props drilling',
  '데이터를 자식에서 부모로도 전달할 수 있나요?',
  'setState는 동기적으로 동작하나요? 아니면 비동기적으로 동작하나요?',
  'Ref의 용도에 대해 설명해주세요.',
  'Context API에 대해 설명해주세요.',
  'Portal에 대해 설명해주세요.',
  'react에서의 state불변성',
  'useMemo useCallback',
  'Redux의 장단점에 대해 설명해주세요.',
  'Flux 패턴에 대해 설명해주세요.',
  'Context API와 Redux차이점',
  'Redux의 3대 원칙에 대해 설명해주세요.',
  'React 18 버전 업데이트 내용',
  'HOC (Higher-Order Components)에 대해 설명해주세요.',
  '에러 바운더리에 대해 설명해주세요.',
  'React.memo와 useMemo의 차이에 대해 설명해주세요.',
  '리액트의 렌더링 성능 향상을 위해 어떻게 해야 하나요?',
  'zustand를 사용한 이유',
  'useEffect의 실행 순서에 대해 설명해주세요.',
  '코드 분할(Code Splitting)이란 무엇인가요? 리액트에서 어떻게 구현하나요?',
  'React에서 Suspense와 Concurrent Mode란 무엇인가요?',
  '커스텀 훅(Custom Hook)이란 무엇인가요? 언제 사용하나요?',
  'useReducer vs useState',
  'React Hydration은 무엇이며, 왜 필요한가요?',
  '리액트 컴포넌트를 설계할 때 어떤 원칙이나 패턴을 따르나요?',
  '리액트 프로젝트에서 접근성(A11Y)을 고려한 경험이 있나요? 어떤 도구나 방법을 사용했나요? ', // react-end
  'SSR vs CSR ', // next-start
  '프레임워크와 라이브러리 차이에 근거하여 React.js와 Next.js를 설명해주세요.',
  'Next.js에서 라우팅을 구현하는 방식은 React.js와 어떻게 다른가요?',
  'Next.js에서 제공하는 렌더링 기법에는 어떤 것들이 있나요? 각각의 특징과 구현방법을 간단히 설명해주세요.',
  'Next.js를 사용하여 Full Stack 웹 개발을 수행할 때의 한계점은 무엇인가요?',
  'TTV, TTI, hydration의 관계를 설명해주세요.',
  '코드스플리팅이란 무엇인가요?',
  'Next.js edge runtime은 무엇이고 어떤 장점이 있을까요?',
  'Next.js 13버전에서 app directory의 역할은 무엇인가요?',
  'Next.js에서 페이지 간 이동을 수행할 때 useRouter 훅의 push와 replace 메서드의 차이점은 무엇인가요?',
  'Next.js에서 <Link> 컴포넌트의 prefetching 기능의 장점은 무엇인가요?',
  'Next.js 버전 13의 렌더링 방식이 컴포넌트 단위로 변경된 이유는 무엇인가요?',
  '서버 컴포넌트와 클라이언트 컴포넌트의 주된 차이점은 무엇인가요?', // next-end
  'React Query란 무엇인가요?', // react-query start
  'useQuery 훅에 대해서 설명해주세요.',
  'useMutation 훅에 대해서 설명해주세요.',
  'React Query에서 캐싱은 어떻게 동작하나요?',
  'React Query의 캐시와 브라우저 캐시의 차이는 무엇인가요?',
  'React Query의 캐시와 브라우저 캐시의 차이는 무엇인가요?',
];
